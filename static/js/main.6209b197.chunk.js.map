{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h9/Clock.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h8/styles/HW8.module.css","p2-homeworks/h11/HW11.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h13/RequestAPI.ts","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/Junior_Plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","Greeting","name","setNameCallback","addUser","totalUsers","inputClass","placeholder","input","onClick","buttonAdd","errorClass","totalUsersNumber","GreetingContainer","users","addUserCallback","useState","setName","setError","length","trim","alert","HW3","setUsers","greetingWrapper","newUser","_id","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","checkboxWrapper","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","valueInputFromLocalStorage","PreJunior","Error404","wrapper","image","src","alt","errorText","to","PATH","PRE_JUNIOR","back","homeWorkReducer","action","copyState","payload","sort","a","b","nameA","toLowerCase","nameB","filter","p","age","initialPeople","HW8","people","setPeople","finalPeople","map","table","buttons_Wrapper","SuperSelect","options","onChangeOption","mappedOptions","o","index","SuperRadio","onChangeCallback","i","arr","HW7","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearTimeout","stringTime","toLocaleString","hour","minute","second","stringDate","year","month","day","mainWrapper","onMouseEnter","onMouseLeave","timeWrapper","dateWrapper","buttonsWrapper","id","window","setInterval","HW9","initState","loadingValue","loadingAC","boolean","loading","HW10","useSelector","isLoading","dispatch","useDispatch","setTimeout","console","log","useStyles","makeStyles","root","width","SuperRange","onChangeRange","classes","max","Slider","event","newValue","valueLabelDisplay","aria-labelledby","SuperDoubleRange","valueArr","HW11","value1","setValue1","value2","setValue2","arrayValue","padding","Junior","selectedTheme","themes","HW12","theme","useCallback","option","colour","changeThemeC","requestApi","success","axios","post","Request","requestText","setRequestText","then","res","data","catch","response","onClickRequest","HW13","JuniorPlus","JUNIOR","JUNIOR_PLUS","MAIN_PAGE","Routes","path","exact","render","Header","showMenu","setShowMenu","headerWrapper","componentRoutesWrapper","main_Menu","activeClassName","active","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6209b197.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2R3vh\",\"blue\":\"Header_blue__1m1Xw\",\"red\":\"Header_red__2bFK4\",\"text\":\"Header_text__3wRFC\",\"blue-text\":\"Header_blue-text__wIw_L\",\"red-text\":\"Header_red-text__1Yvwa\",\"main_Menu\":\"Header_main_Menu__3tOwN\",\"active\":\"Header_active__2Kglr\",\"current\":\"Header_current__2dXry\",\"blue_Menu\":\"Header_blue_Menu__2IEAl\",\"red_Menu\":\"Header_red_Menu__3XI7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__3akG2\",\"input\":\"Greeting_input__2m-GK\",\"buttonAdd\":\"Greeting_buttonAdd__2nxB0\",\"errorClass\":\"Greeting_errorClass__2UWfP\",\"totalUsers\":\"Greeting_totalUsers__19WCz\",\"greetingWrapper\":\"Greeting_greetingWrapper__rdQ2J\",\"totalUsersNumber\":\"Greeting_totalUsersNumber__hfmlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__3kP0C\",\"image\":\"Error404_image__20QnF\",\"errorText\":\"Error404_errorText__1hAkK\",\"back\":\"Error404_back__3FiJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeWrapper\":\"Clock_timeWrapper__3O8do\",\"dateWrapper\":\"Clock_dateWrapper__17Lre\",\"mainWrapper\":\"Clock_mainWrapper__Yz7q9\",\"buttonsWrapper\":\"Clock_buttonsWrapper__3LcIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1t5kA\",\"errorInput\":\"SuperInputText_errorInput__3uXWl\",\"error\":\"SuperInputText_error__2gqUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"HW12_text__3i6wp\",\"blue\":\"HW12_blue__1SO4r\",\"blue-text\":\"HW12_blue-text__Zl7uI\",\"red\":\"HW12_red__1Rl2O\",\"red-text\":\"HW12_red-text__2M2Qg\",\"green\":\"HW12_green__1Yp4u\",\"green-text\":\"HW12_green-text__33W8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3ag7_\",\"red\":\"SuperButton_red__1zbef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2LVxi\",\"column\":\"HW4_column__3cEM_\",\"checkboxWrapper\":\"HW4_checkboxWrapper__3t91r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__24sCp\",\"spanClassName\":\"SuperCheckbox_spanClassName__3SWrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"HW8_table__ORpMa\",\"buttons_Wrapper\":\"HW8_buttons_Wrapper__2iyQu\",\"button\":\"HW8_button__1M3Mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padding\":\"HW11_padding__3w7Tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__399yx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__GaHvi\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`; // need to fix\r\n    // with (?:)\r\n    // and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string | null // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={name} placeholder=\"Enter your name\" onChange={setNameCallback}\r\n                   className={`${inputClass} ${s.input}`}/>\r\n            <SuperButton onClick={addUser} className={s.buttonAdd}>add</SuperButton>\r\n            {error && <div className={s.errorClass}>{error}</div>}\r\n            <div className={s.totalUsers}>Total users : <span className={s.totalUsersNumber}>{totalUsers}</span></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void// need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string | null>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // need to fix any\r\n        setName(e.currentTarget.value)\r\n        setError('')\r\n        // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            alert(`Hello, ${name} !`)\r\n            setName('')\r\n            addUserCallback(name)\r\n        } else {\r\n            setError('Enter your name!')\r\n        }\r\n        // need to fix\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\nimport s from \"./Greeting.module.css\";\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser = {_id: v1(), name: name}\r\n        setUsers([...users, newUser]);// need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.greetingWrapper}>\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\nimport {requestApi} from \"../../../h13/RequestAPI\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <div className={s.checkboxWrapper}>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode(); // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.editableSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        // setValue();\r\n        let valueInputFromLocalStorage=restoreState<string>(\"editable-span-value\", value)\r\n        setValue(valueInputFromLocalStorage)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.image}><img src=\"https://cdn.lifedaily.com/assets/7ada33/dist/images/error/404.svg\"\r\n                                          alt=\"cat\"/></div>\r\n            <div className={s.errorText}>Oops, This page does not exist</div>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={s.back}>go to homepage</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import {initialPeopleType, actionType} from \"../HW8\";\r\n\r\nexport const homeWorkReducer = (state: Array<initialPeopleType>, action: actionType): Array<initialPeopleType> => {\r\n    switch (action.type) {\r\n        case \"sort\": {\r\n            let copyState = [...state]\r\n            action.payload === \"up\" ? copyState.sort((a, b) => {\r\n                let nameA = a.name.toLowerCase()\r\n                let nameB = b.name.toLowerCase()\r\n                if (nameA < nameB) {\r\n                    return -1\r\n                } else if (nameA > nameB) {\r\n                    return 1\r\n                }\r\n                return 0\r\n            }) : copyState.sort((a, b) => {\r\n                let nameA = a.name.toLowerCase()\r\n                let nameB = b.name.toLowerCase()\r\n                if (nameA < nameB) {\r\n                    return 1\r\n                } else if (nameA > nameB) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            })\r\n\r\n            return copyState\r\n        }\r\n        case \"check\": {\r\n            return state.filter(p => p.age >= action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from \"./styles/HW8.module.css\"\r\n\r\nexport  type initialPeopleType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\nexport type actionType = {\r\n    type: \"sort\" | \"check\"\r\n    payload: \"up\" | \"down\" | number\r\n}\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <tr key={p._id}>\r\n            <td>{p.name}</td>\r\n            <td>{p.age}</td>\r\n        </tr>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\r\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <table className={s.table}>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Age</th>\r\n                </tr>\r\n                {finalPeople}\r\n            </table>\r\n\r\n            <div className={s.buttons_Wrapper}>\r\n                <div ><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n                <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n                <div ><SuperButton onClick={check}> check 18</SuperButton></div>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const mappedOptions = options ? options.map((o, index) => {\n        return <option key={index}>{o}</option>\n    }) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value)\n        }\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value)\n        }\n    }\n\n\n    const mappedOptions = options ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                onChange={onChangeCallback}\n                value={o}\n                name={name}\n                checked={o === value}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React, {useState} from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from \"./Clock.module.css\"\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const stop = () => {\r\n        // stop\r\n        clearTimeout(timerId)\r\n    }\r\n    const start = () => {\r\n        stop();\r\n        const id: number = window.setInterval(() => {\r\n            // setDate\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n        setShow(true)\r\n    };\r\n    const onMouseLeave = () => {\r\n        // close\r\n        setShow(false)\r\n    };\r\n\r\n    const dateOptions = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    }\r\n    const timeOptions = {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    }\r\n    // @ts-ignore\r\n    const stringTime = date.toLocaleString(\"ru\", timeOptions); // fix with date\r\n    // @ts-ignore\r\n    const stringDate = date.toLocaleString(\"ru\", dateOptions); // fix with date\r\n\r\n    return (\r\n        <div className={s.mainWrapper}>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n                className={s.timeWrapper}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div className={s.dateWrapper}>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <div className={s.buttonsWrapper}><\r\n                SuperButton onClick={start}>start</SuperButton>\r\n                <SuperButton onClick={stop}>stop</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","export type initStateType = {\r\n    loadingValue: boolean\r\n}\r\ntype LoadingACType = {\r\n    type: 'IS_LOADING'\r\n    loading: boolean\r\n}\r\n\r\nconst initState = {\r\n    loadingValue: false\r\n}\r\n\r\nexport const loadingReducer = (state = initState, action: LoadingACType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"IS_LOADING\": {\r\n            return {\r\n                ...state,\r\n                loadingValue: !action.loading\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadingAC = (boolean: boolean): LoadingACType => {\r\n    return {type: 'IS_LOADING', loading: boolean}\r\n};\r\n\r\n// fix any","import React from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.isLoading.loadingValue);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const setLoading = () => {\r\n        // dispatch\r\n        // setTimeout\r\n        dispatch(loadingAC(loading))\r\n\r\n        const id: number = window.setTimeout(() => {\r\n            dispatch(loadingAC(!loading))\r\n        }, 2000)\r\n        console.log(\"loading...\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div><img src={'https://i.gifer.com/origin/d3/d3f472b06590a25cb4372ff289d81711_w200.gif'}\r\n                              alt={'loading'}/></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import {makeStyles, Slider} from \"@material-ui/core\";\r\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value?: number\r\n    max: number\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 600,\r\n    },\r\n});\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className, value, max\r\n    }\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const onChangeCallback = (event: ChangeEvent<{}>, newValue: number | number[]) => {\r\n        // @ts-ignore\r\n        onChange && onChange(event); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(newValue as number);\r\n    }\r\n\r\n    // const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                valueLabelDisplay=\"on\"\r\n                aria-labelledby=\"range-slider\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React, {ChangeEvent} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 600,\r\n    },\r\n});\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: Array<number>) => void\r\n    valueArr?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        valueArr,\r\n        onChangeRange\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    const classes = useStyles();\r\n\r\n    const onChangeRangeCallback2 = (event: ChangeEvent<{}>, newValue: number | number[]) => {\r\n        onChangeRange && onChangeRange(newValue as number[]);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider\r\n                value={valueArr}\r\n                onChange={onChangeRangeCallback2}\r\n                valueLabelDisplay=\"on\"\r\n                aria-labelledby=\"range-slider\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport s from './HW11.module.css'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(100);\r\n\r\n    let arrayValue: [number, number] = [value1, value2]\r\n\r\n    function setValueOne(value: number) {\r\n        setValue1(value)\r\n    }\r\n\r\n    function setValueTwo(value: Array<number>) {\r\n        setValue1(value[0])\r\n        setValue2(value[1])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.padding}>\r\n                <SuperRange onChangeRange={setValueOne}\r\n                            value={value1}\r\n                            max={value2}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.padding}>\r\n                <SuperDoubleRange valueArr={arrayValue} onChangeRange={setValueTwo}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","import React from \"react\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;","type changeThemeCActionType = {\r\n    type: 'CHANGE-THEME'\r\n    colour: string\r\n}\r\ntype initStateType = {\r\n    selectedTheme: string\r\n}\r\n\r\nconst initState = {\r\n    selectedTheme: 'green'\r\n};\r\n\r\nexport const themeReducer = (state: initStateType = initState, action: changeThemeCActionType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"CHANGE-THEME\": {\r\n            return {...state, selectedTheme: action.colour}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const changeThemeC = (option: string): changeThemeCActionType => {\r\n    return {\r\n        type: 'CHANGE-THEME',\r\n        colour: option\r\n    }\r\n}; // fix any","import React, {useCallback} from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\r\nimport {changeThemeC} from \"./bll/themeReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\n\r\nconst themes = ['green', 'blue', 'red'];\r\n\r\n\r\nfunction HW12() {\r\n    const theme = useSelector((state: AppStoreType) => state.theme.selectedTheme);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeCallback = useCallback((option: string) => {\r\n        dispatch(changeThemeC(option))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={`${s[theme + '-text']} ${s.text}`}>\r\n                homeworks 12\r\n            </span>\r\n\r\n            <SuperSelect options={themes} onChangeOption={onChangeCallback}/>\r\n\r\n            {/*should work (должно работать)*/}\r\n            {/*SuperSelect or SuperRadio*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import axios from \"axios\";\r\n\r\nexport const requestApi = {\r\n    postRequest(success: boolean) {\r\n        return axios.post(`https://neko-cafe-back.herokuapp.com/auth/test`, {success})\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {requestApi} from \"./RequestAPI\";\r\n\r\nfunction Request() {\r\n    let [requestText, setRequestText] = useState<string>('')\r\n    let [checked, setChecked] = useState<boolean>(false)\r\n    const onClickRequest = (checked: boolean) => {\r\n        requestApi.postRequest(checked)\r\n            .then(res => {\r\n                // console.log(res)\r\n                setRequestText(res.data.errorText)\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response ? error.response.data.errorText : error.message);\r\n                setRequestText(error.response.data.errorText)\r\n            })\r\n    }\r\n    const onChangeCheckBox = () => {\r\n        setChecked(!checked)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                onClickRequest(checked)\r\n            }}>Request\r\n            </button>\r\n            <input type=\"checkbox\" checked={checked} onChange={onChangeCheckBox}/>\r\n            <div>{requestText}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Request","import React from \"react\";\r\nimport Request from \"./Request\";\r\n\r\nfunction HW13() {\r\n    return (\r\n        <>\r\n            <hr/>\r\n            homeworks 13\r\n            <Request/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HW13","import React from \"react\";\r\nimport HW12 from \"../../h12/HW12\";\r\nimport HW13 from \"../../h13/HW13\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <HW12/>\r\n            <HW13/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus","import React from \"react\";\r\nimport {Switch, Redirect, Route} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/Junior_Plus\";\r\nimport Header from \"./Header\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior_plus\",\r\n    MAIN_PAGE: \"/main\"\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\nimport s from './Header.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\n\r\nfunction Header() {\r\n    let [showMenu, setShowMenu] = useState(true)\r\n    const theme = useSelector((state: AppStoreType) => state.theme.selectedTheme);\r\n\r\n\r\n    return (\r\n        <div className={`${s[theme]} ${s.headerWrapper}`}>\r\n            <div className={s.componentRoutesWrapper}>\r\n                <div className={`${s[theme + '-text']} ${s.text}`} onClick={() => {\r\n                    setShowMenu(!showMenu)\r\n                }}>React homeworks\r\n                </div>\r\n            </div>\r\n            {showMenu && (<ul className={`${s[theme + '_Menu']} ${s.main_Menu}`}>\r\n                <li><NavLink to={PATH.PRE_JUNIOR} activeClassName={s.active}>Pre Junior</NavLink></li>\r\n                <li><NavLink to={PATH.JUNIOR} activeClassName={s.active}>Junior </NavLink></li>\r\n                <li><NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.active}>Junior Plus</NavLink></li>\r\n            </ul>)}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<div>react homeworks:</div>*/}\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    isLoading: loadingReducer,\r\n    theme: themeReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}